import{_ as s,c as a,a as e,o as n}from"./app-DhFehVeD.js";const p={};function l(t,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h1 id="project-interface-协议" tabindex="-1"><a class="header-anchor" href="#project-interface-协议"><span>Project Interface 协议</span></a></h1><blockquote><p>注意: 本文档是关于 <code>ProjectInterface</code> 的编写和使用</p><p>文中将使用 PI 代指 <code>ProjectInterface</code>，Client 代指可以处理 PI 的工具</p></blockquote><h2 id="简介" tabindex="-1"><a class="header-anchor" href="#简介"><span>简介</span></a></h2><p>所谓 <code>ProjectInterface</code>，即 MaaFramework 的一个标准化的项目结构声明，该声明目前包含 <code>interface.json</code> 一个文件。通过定义 PI，你可以使用 MaaFramework 的各种衍生工具。因此，即使你打算纯粹依靠通用编程语言集成，也建议定义包含基础信息的 PI。</p><ul><li><p>MaaPiCli</p><p>通用 CLI</p></li><li><p><a href="https://github.com/SweetSmellFox/MFAWPF" target="_blank" rel="noopener noreferrer">MFAWPF</a></p><p>通用 UI</p></li><li><p><a href="https://marketplace.visualstudio.com/items?itemName=nekosu.maa-support" target="_blank" rel="noopener noreferrer">Maa Pipeline Support</a></p><p>VSCode 插件</p></li><li><p><a href="https://github.com/MaaXYZ/MaaPracticeBoilerplate" target="_blank" rel="noopener noreferrer">项目模板</a></p><p>基于 PI 组织的模板</p></li></ul><h2 id="interface-json" tabindex="-1"><a class="header-anchor" href="#interface-json"><span><code>interface.json</code></span></a></h2><blockquote><p>该文件可以通过 <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/tools/interface.schema.json" target="_blank" rel="noopener noreferrer">schema</a> 文件获得提示和校验功能</p><p>使用 VSCode 打开 项目模板 文件夹，可自动关联 schema 和文件</p></blockquote><h3 id="整体结构" tabindex="-1"><a class="header-anchor" href="#整体结构"><span>整体结构</span></a></h3><ul><li><p>version <code>string</code></p><p>项目版本，Client 可以展示给用户。</p></li><li><p>message <code>string</code></p><p>欢迎语，Client 可以展示给用户。</p></li><li><p>controller <code>object[]</code></p><p>控制器配置，为一个对象数组，含有预设的控制器信息。</p><ul><li><p>name <code>string</code></p><p>唯一名称，Client 会展示给用户进行选择。</p></li><li><p>type <code>&#39;Adb&#39; | &#39;Win32&#39;</code></p><p>控制器类型，取值为 <code>Adb</code> 和 <code>Win32</code>。</p></li><li><p>adb <code>object</code></p><p><code>Adb</code> 控制器的具体配置。</p><ul><li><p>input <code>number</code></p><p>可选。<code>Adb</code> 控制器的控制方式，不提供则使用默认。具体定义参见 <a href="#adb-input">Input和Screencap</a>。</p></li><li><p>screencap <code>number</code></p><p>可选。<code>Adb</code> 控制器的截图方式，不提供则使用默认。具体定义参见 <a href="#adb-screencap">Input和Screencap</a>。</p></li><li><p>config <code>object</code></p><p>可选。<code>Adb</code> 控制器的额外配置，不提供则使用空对象。具体定义参见 <a href="#adb-config">Adb Config</a>。</p></li></ul></li><li><p>win32 <code>object</code></p><p><code>Win32</code> 控制器的具体配置。</p><ul><li><p>class_regex <code>string</code></p><p>可选。<code>Win32</code> 控制器搜索窗口类名使用的正则表达式。</p></li><li><p>window_regex <code>string</code></p><p>可选。<code>Win32</code> 控制器搜索窗口标题使用的正则表达式。</p></li><li><p>input <code>number</code></p><p>可选。<code>Win32</code> 控制器的控制方式，不提供则使用默认。具体定义参见 <a href="#win32-input">Input和Screencap</a>。</p></li><li><p>screencap <code>number</code></p><p>可选。<code>Win32</code> 控制器的截图方式，不提供则使用默认。具体定义参见 <a href="#win32-screencap">Input和Screencap</a>。</p></li></ul></li></ul></li><li><p>resource <code>object[]</code></p><p>资源配置，为一个对象数组，含有资源加载的信息。</p><ul><li><p>name <code>string</code></p><p>唯一名称，Client 会展示给用户进行选择。</p></li><li><p>path <code>string[]</code></p><p>加载的路径数组。如果提供多个路径，会依次加载，后加载的资源会<a href="#%E8%B5%84%E6%BA%90%E8%A6%86%E7%9B%96">覆盖</a>前加载的资源。</p><p>使用 <code>{PROJECT_DIR}</code> 来指代 <code>interface.json</code> 文件所在的目录，例如:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">resource</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">: </span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">[</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">name</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Official</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">path</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">{PROJECT_DIR}/resource</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">        ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意: 资源不仅仅是 <code>pipeline</code>，也包含 <code>image</code> 和 <code>model</code>，因此不要直接指定 <code>pipeline</code> 目录。</p></li></ul></li><li><p>agent <code>object</code></p><p>代理配置，为一个对象，含有子进程（AgentServer）的信息。</p><ul><li><p>child_exec <code>string</code></p><p>子进程路径，为系统路径中可执行文件。如在环境变量（系统变量、用户变量）中存在 Python 路径，可直接写 <code>&quot;python&quot;</code>。</p></li><li><p>child_args <code>string[]</code></p><p>可选。子进程参数数组。</p><p>使用 <code>{PROJECT_DIR}</code> 来指代 <code>interface.json</code> 文件所在的目录，例如:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">agent</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">: </span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">child_exec</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">python</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">child_args</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">{PROJECT_DIR}/agent/main.py</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这里 <code>{PROJECT_DIR}</code> 指安装后 <code>interface.json</code> 文件所在的目录，不同项目请根据实际情况确定。</p></li><li><p>identifier <code>string</code></p><p>可选。连接标识符，被用来创建一个通信套接字。填写则会被使用，否则自动创建。</p></li></ul></li><li><p>task <code>object[]</code></p><p>任务配置，为一个对象数组，含有可执行任务的信息。</p><ul><li><p>name <code>string</code></p><p>唯一名称，Client 会展示给用户进行选择。</p></li><li><p>entry <code>string</code></p><p>任务入口，为 <code>pipeline</code> 中 <code>Task</code> 的名称。</p></li><li><p>pipeline_override <code>pipeline</code></p><p>可选。任务参数，执行任务时会<a href="#%E8%B5%84%E6%BA%90%E8%A6%86%E7%9B%96">覆盖</a>已加载的资源。该项结构与 <code>pipeline</code> 中的 <code>json</code> 文件完全一致，需要包含 任务名 部分，例如:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">pipeline_override</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">: </span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Quit</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">enabled</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;"> true</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>option <code>string[]</code></p><p>可选。任务配置项，为一个数组，含有若干后续 <code>option</code> 对象中的键的值，Client 会根据要求用户进行选择。</p><p>Client 可以使用 <code>option</code> 中的顺序来展示配置项。</p></li></ul></li><li><p>option <code>record&lt;string, object&gt;</code></p><p>配置项定义，为一个对象映射，含有配置项的信息。</p><ul><li><p><em>key</em></p><p>唯一名称，任务会使用该名称进行引用。</p></li><li><p>cases <code>object[]</code></p><p>可选项，为一个对象数组，含有各个可选项的信息。</p><p>Client 可以使用 <code>cases</code> 中的顺序来展示可选项。</p><ul><li><p>name <code>string</code></p><p>唯一名称，Client 会展示给用户进行选择。</p></li><li><p>pipeline_override <code>pipeline</code></p><p>同 <code>task</code> 中的 <code>pipeline_override</code>，在选项激活时生效。</p></li></ul></li><li><p>default_case <code>string</code></p><p>可选。默认选项，Client 可以使用该值作为选项的初始值。</p></li></ul></li></ul><h3 id="input和screencap" tabindex="-1"><a class="header-anchor" href="#input和screencap"><span>Input和Screencap</span></a></h3><h4 id="input" tabindex="-1"><a class="header-anchor" href="#input"><span>Input</span></a></h4><p>定义 MaaFramework 会使用何种方式来控制。</p><h5 id="adb-input" tabindex="-1"><a class="header-anchor" href="#adb-input"><span>Adb Input</span></a></h5><blockquote><p>参考 <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/include/MaaFramework/MaaDef.h#L227-L240" target="_blank" rel="noopener noreferrer">MaaDef.h</a></p></blockquote><p>将下面选择的方式 <strong>按位或</strong> 合并为一个值提供。MaaFramework 将会按照固定优先级顺序尝试所有提供的方式，选择首个可用方式。</p><p>默认尝试除 EmulatorExtras 外所有方式。</p><blockquote><p>优先级: EmulatorExtras &gt; Maatouch &gt; MinitouchAndAdbKey &gt; AdbShell</p></blockquote><ul><li><p>AdbShell <code>1</code></p><p>使用 adb 进程进行控制。</p></li><li><p>MinitouchAndAdbKey <code>2</code></p><p>使用 adb 进程进行按键控制，使用 minitouch 工具进行触摸控制。</p></li><li><p>Maatouch <code>4</code></p><p>使用 maatouch 工具控制。</p></li><li><p>EmulatorExtras <code>8</code></p><p>使用模拟器专用工具进行控制。目前支持的模拟器:</p><ul><li><p>MuMu 12</p></li><li><p>雷电 9</p></li></ul></li></ul><h5 id="win32-input" tabindex="-1"><a class="header-anchor" href="#win32-input"><span>Win32 Input</span></a></h5><blockquote><p>参考 <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/include/MaaFramework/MaaDef.h#L252-L259" target="_blank" rel="noopener noreferrer">MaaDef.h</a></p></blockquote><p>选择下面的值提供。</p><p>无默认值。Client 可以选择一个作为默认值。</p><p>Win32 下不同程序处理输入的方法不同，不存在一个通用方式。</p><ul><li><p>Seize <code>1</code></p><p>抢占式控制。该模式下用户的光标将直接被 MaaFramework 移动，目标窗口将会保持激活。</p></li><li><p>SendMessage <code>2</code></p><p>使用 SendMessage 控制。该模式下目标窗口可以失焦。</p></li></ul><h4 id="screencap" tabindex="-1"><a class="header-anchor" href="#screencap"><span>Screencap</span></a></h4><p>定义 MaaFramework 会使用何种方式来截图。</p><h5 id="adb-screencap" tabindex="-1"><a class="header-anchor" href="#adb-screencap"><span>Adb Screencap</span></a></h5><blockquote><p>参考 <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/include/MaaFramework/MaaDef.h#L208-L225" target="_blank" rel="noopener noreferrer">MaaDef.h</a></p></blockquote><p>将下面选择的方式 <strong>按位或</strong> 合并为一个值提供。MaaFramework 将会尝试所有提供的方式，选择最快的可用方式。</p><p>默认尝试除 <code>RawByNetcat</code>，<code>MinicapDirect</code>，<code>MinicapStream</code> 外所有方式。</p><p><code>MinicapDirect</code> 和 <code>MinicapStream</code> 由于会编码为 jpg，为有损编码，将显著降低模板匹配的效果，不建议使用。</p><ul><li><p>EncodeToFileAndPull <code>1</code></p><p>通过内置 screencap 进程截图，编码为 png 输出到文件，通过 adb 进程拉取文件，读取文件。</p></li><li><p>Encode <code>2</code></p><p>通过内置 screencap 进程截图，编码为 png，通过 adb 进程管道传输。</p></li><li><p>RawWithGzip <code>4</code></p><p>通过内置 screencap 进程截图，通过 gzip 压缩，通过 adb 进程管道传输。</p></li><li><p>RawByNetcat <code>8</code></p><p>通过内置 screencap 进程截图，通过 nc 进程网络传输。</p></li><li><p>MinicapDirect <code>16</code></p><p>通过 minicap 工具截图和编码为 jpg，通过 adb 进程管道传输。</p></li><li><p>MinicapStream <code>32</code></p><p>通过 minicap 工具流式截图和编码为 jpg，通过 adb 进程管道传输。</p></li><li><p>EmulatorExtras <code>64</code></p><p>使用模拟器专用工具进行截图。</p></li></ul><h5 id="win32-screencap" tabindex="-1"><a class="header-anchor" href="#win32-screencap"><span>Win32 Screencap</span></a></h5><blockquote><p>参考 <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/include/MaaFramework/MaaDef.h#L242-L250" target="_blank" rel="noopener noreferrer">MaaDef.h</a></p></blockquote><p>选择下面的值提供。</p><p>无默认值。Client 可以选择一个作为默认值。</p><p>Win32 下不同程序处理绘制的方法不同，不存在一个通用方式。</p><ul><li><p>GDI <code>1</code></p></li><li><p>FramePool <code>2</code></p></li><li><p>DXGI_DesktopDup <code>4</code></p></li></ul><h3 id="adb-config" tabindex="-1"><a class="header-anchor" href="#adb-config"><span>Adb Config</span></a></h3><p>可以通过 config 对象覆盖控制器的部分默认逻辑。通常只有在使用 <code>EmulatorExtras</code> 且进行多开时会需要特定配置。</p><h3 id="资源覆盖" tabindex="-1"><a class="header-anchor" href="#资源覆盖"><span>资源覆盖</span></a></h3><p>后加载的资源中如果发现了和已加载资源同名的任务，会对任务进行合并。通常情况下，可以认为新的任务的顶级键会替换旧任务的。例如:</p><p>旧任务</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">task1</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">enabled</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;"> false</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">DirectHit</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">T1</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">T2</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>新任务</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">task1</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">enabled</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">T2</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">T3</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>合并后的任务</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">task1</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">enabled</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;"> true</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">DirectHit</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">T2</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">T3</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> ]</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">       // 直接替换，内部不会合并</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48)]))}const r=s(p,[["render",l]]),d=JSON.parse('{"path":"/zh-cn/application/3.2-ProjectInterface.html","title":"Project Interface 协议","lang":"zh-CN","frontmatter":{"description":"Project Interface 协议 注意: 本文档是关于 ProjectInterface 的编写和使用 文中将使用 PI 代指 ProjectInterface，Client 代指可以处理 PI 的工具 简介 所谓 ProjectInterface，即 MaaFramework 的一个标准化的项目结构声明，该声明目前包含 interface.j...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Project Interface 协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-19T09:11:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaFramework\\"}]}"],["meta",{"property":"og:url","content":"https://maafw.xyz/MaaFramework-Docs-Website/zh-cn/application/3.2-ProjectInterface.html"}],["meta",{"property":"og:site_name","content":"MaaFramework"}],["meta",{"property":"og:title","content":"Project Interface 协议"}],["meta",{"property":"og:description","content":"Project Interface 协议 注意: 本文档是关于 ProjectInterface 的编写和使用 文中将使用 PI 代指 ProjectInterface，Client 代指可以处理 PI 的工具 简介 所谓 ProjectInterface，即 MaaFramework 的一个标准化的项目结构声明，该声明目前包含 interface.j..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-19T09:11:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-19T09:11:31.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maafw.xyz/MaaFramework-Docs-Website/en-us/application/3.2-ProjectInterface.html"}]]},"git":{"createdTime":1750324291000,"updatedTime":1750324291000,"contributors":[{"name":"weinibuliu","username":"weinibuliu","email":"weinibuliu@outlook.com","commits":1,"url":"https://github.com/weinibuliu"}]},"readingTime":{"minutes":6.22,"words":1865},"filePathRelative":"zh-cn/application/3.2-ProjectInterface.md","autoDesc":true}');export{r as comp,d as data};
