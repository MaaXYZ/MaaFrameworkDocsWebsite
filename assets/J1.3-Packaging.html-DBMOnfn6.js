import{_ as a,c as i,a as t,o as n}from"./app-DhFehVeD.js";const o={};function s(r,e){return n(),i("div",null,e[0]||(e[0]=[t('<h1 id="packaging" tabindex="-1"><a class="header-anchor" href="#packaging"><span>Packaging</span></a></h1><blockquote><p>Note: This document is about integrating with NodeJS</p></blockquote><p>This project contains binary. <code>@maaxyz/maa-node</code> package will require corresponding <code>MaaNode.node</code> from <code>@maaxyz/maa-node-${platform}-${arch}</code>. Meanwhile, as loaded <code>MaaNode.node</code> dynamic links <code>MaaFramework</code> library, and <code>Adb</code> controller relies on <code>AgentBinary</code>, it is strongly recommended to mark <code>@maaxyz/maa-node</code> as external dependencies and do not participate packaging.</p><p>If you do want to package it, the following should be take cared:</p><ul><li>Usually, packaging tool can only discover <code>MaaNode.node</code>, but won&#39;t aware its dependencies. All <code>dll/so/dylib</code> besides <code>MaaNode.node</code> should be placed the same directory to <code>MaaNode.node</code>.</li><li><code>Adb</code> controller will use <code>../agent</code> applying on the directory of <strong>the library script</strong> to search for MaaAgentBinary. It is also possible to manually configure it in code.</li></ul><h2 id="maa-node-template" tabindex="-1"><a class="header-anchor" href="#maa-node-template"><span>maa-node-template</span></a></h2><p>Refer to <a href="https://github.com/neko-para/maa-node-template" target="_blank" rel="noopener noreferrer">maa-node-template</a>. This template provides a simplified packaging solution with electron.</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-shell"><span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> run</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> build</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> # use esbuild to build project, refer to scripts/build.mjs</span></span>\n<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> run</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> watch</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> # use esbuild and vite to hot reload, refer to scripts/watch.mjs</span></span>\n<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">npm</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> run</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> package</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> # use electron-forge to package</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',8)]))}const l=a(o,[["render",s]]),c=JSON.parse('{"path":"/en-us/binding/NodeJS/J1.3-Packaging.html","title":"Packaging","lang":"en-US","frontmatter":{"description":"Packaging Note: This document is about integrating with NodeJS This project contains binary. @maaxyz/maa-node package will require corresponding MaaNode.node from @maaxyz/maa-no...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Packaging\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-19T09:11:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaFramework\\"}]}"],["meta",{"property":"og:url","content":"https://maafw.xyz/MaaFramework-Docs-Website/en-us/binding/NodeJS/J1.3-Packaging.html"}],["meta",{"property":"og:site_name","content":"MaaFramework"}],["meta",{"property":"og:title","content":"Packaging"}],["meta",{"property":"og:description","content":"Packaging Note: This document is about integrating with NodeJS This project contains binary. @maaxyz/maa-node package will require corresponding MaaNode.node from @maaxyz/maa-no..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-19T09:11:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-19T09:11:31.000Z"}]]},"git":{"createdTime":1750324291000,"updatedTime":1750324291000,"contributors":[{"name":"weinibuliu","username":"weinibuliu","email":"weinibuliu@outlook.com","commits":1,"url":"https://github.com/weinibuliu"}]},"readingTime":{"minutes":0.59,"words":178},"filePathRelative":"en-us/binding/NodeJS/J1.3-Packaging.md","autoDesc":true}');export{l as comp,c as data};
