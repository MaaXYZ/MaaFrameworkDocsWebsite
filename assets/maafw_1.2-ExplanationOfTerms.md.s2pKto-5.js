import{_ as t,c as r,o as e,a2 as n}from"./chunks/framework.DYZYzxF5.js";const _=JSON.parse('{"title":"术语","description":"","frontmatter":{},"headers":[],"relativePath":"maafw/1.2-ExplanationOfTerms.md","filePath":"maafw/1.2-术语解释.md"}'),a={name:"maafw/1.2-ExplanationOfTerms.md"};function s(i,o,p,g,l,d){return e(),r("div",null,o[0]||(o[0]=[n('<h1 id="术语" tabindex="-1">术语 <a class="header-anchor" href="#术语" aria-label="Permalink to &quot;术语&quot;">​</a></h1><h2 id="maafw-专有术语" tabindex="-1">MaaFW 专有术语 <a class="header-anchor" href="#maafw-专有术语" aria-label="Permalink to &quot;MaaFW 专有术语&quot;">​</a></h2><ul><li><p><strong>Node</strong> | <strong>节点</strong></p><p>符合 <a href="3.1-PipelineProtocol">任务流水线（Pipeline）协议</a> 的一个完整的 Json Object。</p></li><li><p><strong>Task</strong> | <strong>任务</strong></p><p>若干 <strong>Node</strong> 按一定次序相连的逻辑顺序结构，表示从头到尾的整个过程。</p></li><li><p><strong>Entry</strong> | <strong>入口</strong></p><p>一个 <strong>Task</strong> 中的第一个 <strong>Node</strong>。</p></li><li><p><strong>Pipeline</strong> | <strong>流水线</strong></p><p>一个 <code>pipeline</code> 文件夹中包含的 <strong>Node</strong> 全体。</p></li><li><p><strong>Bundle</strong> | <em>暂无翻译</em></p><p>一个按标准资源结构存储的文件夹，包含 <code>pipeline</code>、<code>model</code>、<code>image</code> 等文件夹。</p></li><li><p><strong>Resource</strong> | <strong>资源</strong></p><p>多个 <strong>Bundle</strong> 按一定次序加载的资源结构。</p></li><li><p><strong>PI</strong> | <strong>项目接口</strong></p><p><code>ProjectInterface</code>, 符合 <a href="3.2-ProjectInterface">ProjectInterface 定义</a> 的标准化项目结构声明。</p></li><li><p><strong>Agent</strong> | <strong>执行代理</strong></p><p>💡 MaaFW v4.x 版本亮点功能。可将 MaaFW 本体与 <code>CustomRecognition</code> / <code>CustomAction</code> 分离至独立的两个进程中。<br> 例如本体运行在 C# 编写的通用 GUI 中，同时在 Python 代码中运行编写自己的 Custom 逻辑，打破语言壁垒。</p></li></ul><h2 id="通用术语" tabindex="-1">通用术语 <a class="header-anchor" href="#通用术语" aria-label="Permalink to &quot;通用术语&quot;">​</a></h2><ul><li><p><strong>Binding</strong> | <strong>语言绑定</strong></p><p>提供将 MaaFW 的 C 语言接口转换为其他编程语言或操作系统服务的胶水代码。<br> 参考 <a href="https://en.wikipedia.org/wiki/Language_binding">WIKI</a>。</p></li><li><p><strong>ROI</strong> | <strong>感兴趣区域</strong></p><p>定义图像识别边界，仅在该区域内进行相关图像处理。<br> 参考 <a href="https://en.wikipedia.org/wiki/Region_of_interest">WIKI</a>。</p></li><li><p><strong>OCR</strong> | <strong>文字识别</strong></p><p>对包含文本内容的图像进行处理和识别，并提取其中所包含的文字及排版信息。<br> 参考 <a href="https://zh.wikipedia.org/wiki/%E5%85%89%E5%AD%A6%E5%AD%97%E7%AC%A6%E8%AF%86%E5%88%AB">WIKI</a>。</p></li></ul>',5)]))}const f=t(a,[["render",s]]);export{_ as __pageData,f as default};
