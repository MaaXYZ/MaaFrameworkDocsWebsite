import{_ as h,c as p,a as n,b as a,d as s,e as t,w as l,r,o as k}from"./app-DhFehVeD.js";const o={};function d(c,i){const e=r("RouteLink");return k(),p("div",null,[i[8]||(i[8]=n(`<h1 id="quick-start" tabindex="-1"><a class="header-anchor" href="#quick-start"><span>Quick Start</span></a></h1><h2 id="development-approach" tabindex="-1"><a class="header-anchor" href="#development-approach"><span>Development Approach</span></a></h2><p>MaaFramework provides three integration solutions to meet different development scenarios:</p><h3 id="approach-1-pure-json-low-code-programming-general-ui" tabindex="-1"><a class="header-anchor" href="#approach-1-pure-json-low-code-programming-general-ui"><span>Approach 1: Pure JSON Low-Code Programming (General UI)</span></a></h3><p><strong>Applicable Scenarios:</strong> Quick start, simple logic implementation</p><p><strong>Features:</strong></p><ul><li>Zero coding prerequisite</li><li>Automated processes configured through JSON</li><li>Comes with a <a href="https://www.bilibili.com/video/BV1yr421E7MW" target="_blank" rel="noopener noreferrer">üéûÔ∏è video tutorial</a> and a <a href="https://github.com/MaaXYZ/MaaPracticeBoilerplate" target="_blank" rel="noopener noreferrer">‚≠ê project template</a></li></ul><div class="language-jsonc line-numbers-mode" data-highlighter="shiki" data-ext="jsonc" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-jsonc"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Click Start Button</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">OCR</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">          // Text recognition engine</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">expected</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Start</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">           // Target text</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">             // Execute click action</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click Confirm Icon</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">]</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;"> // Subsequent task chain</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Click Confirm Icon</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">TemplateMatch</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">// Image template matching</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">template</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">confirm.png</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">     // Matching asset path</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="approach-2-json-custom-logic-extension-recommended" tabindex="-1"><a class="header-anchor" href="#approach-2-json-custom-logic-extension-recommended"><span>Approach 2: JSON + Custom Logic Extension (Recommended)</span></a></h3><p><strong>üí° Core feature of release v4.x</strong></p><p><strong>Features</strong>:</p><ul><li>Retains the low-code advantage of JSON</li><li>Registers custom task modules through AgentServer</li><li>Seamlessly integrates with the <a href="https://github.com/MaaXYZ/MaaPracticeBoilerplate" target="_blank" rel="noopener noreferrer">‚≠ê boilerplate</a>.</li></ul><div class="language-jsonc line-numbers-mode" data-highlighter="shiki" data-ext="jsonc" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-jsonc"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Click Confirm Icon</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Custom Processing Module</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">Custom Processing Module</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Custom</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">custom_recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">MyReco</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">  // Custom recognizer ID</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Custom</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">custom_action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">MyAct</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">         // Custom action ID</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>üí° The General UI will automatically connect to your AgentServer child process, and call the corresponding recognition/action when executing <code>MyReco</code>/<code>MyAct</code>.</p><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># Python pseudo-code example</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#81A1C1;">from</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> maa</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">agent</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">agent_server </span><span style="--shiki-light:#AF00DB;--shiki-dark:#81A1C1;">import</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> AgentServer</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># Register a custom recognizer</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#ECEFF4;">@</span><span style="--shiki-light:#795E26;--shiki-dark:#D08770;">AgentServer</span><span style="--shiki-light:#795E26;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#D08770;">custom_recognition</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">MyReco</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">class</span><span style="--shiki-light:#267F99;--shiki-dark:#8FBCBB;"> CustomReco</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">    def</span><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;"> analyze</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#D8DEE9;">ctx</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">):</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#81A1C1;">        return</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> (</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;">10</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 10</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 100</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 100</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">)</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">  # Return your own processed recognition result</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># Register a custom action</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#ECEFF4;">@</span><span style="--shiki-light:#795E26;--shiki-dark:#D08770;">AgentServer</span><span style="--shiki-light:#795E26;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#795E26;--shiki-dark:#D08770;">custom_action</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">MyAct</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">class</span><span style="--shiki-light:#267F99;--shiki-dark:#8FBCBB;"> CustomAction</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">    def</span><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;"> run</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#001080;--shiki-dark:#D8DEE9;">ctx</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">):</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        ctx</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">controller</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">post_click</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;">100</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 10</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">).</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">wait</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">()</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">  # Execute click</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        ctx</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">override_next</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">([</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">TaskA</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">TaskB</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">])</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">       # Dynamically adjust the task flow</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># Start the Agent service</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">AgentServer</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">start_up</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">sock_id</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>For a complete example, refer to the <a href="https://github.com/MaaXYZ/MaaPracticeBoilerplate/commit/126a56cefc17bf6c8335c703387d8d3ee2dad4d1" target="_blank" rel="noopener noreferrer">template commit</a>.</p><h3 id="approach-3-full-code-development" tabindex="-1"><a class="header-anchor" href="#approach-3-full-code-development"><span>Approach 3: Full-Code Development</span></a></h3><p><strong>Applicable Scenarios</strong>:</p><ul><li>Deep customization requirements</li><li>Implementation of complex business logic</li><li>Need for flexible control over the execution flow</li></ul><div class="language-python line-numbers-mode" data-highlighter="shiki" data-ext="python" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-python"><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># Python pseudo-code example</span></span>
<span class="line"><span style="--shiki-light:#0000FF;--shiki-dark:#81A1C1;">def</span><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;"> main</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">():</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">    # Execute the predefined JSON task</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">    result </span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> tasker</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">post_task</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click Start Button</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">).</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">wait</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">().</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">get</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">()</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">    </span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#81A1C1;">    if</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> result</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">completed</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">        # Execute code-level operations</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        tasker</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">controller</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">post_click</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;">100</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 100</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">)</span></span>
<span class="line"><span style="--shiki-light:#AF00DB;--shiki-dark:#81A1C1;">    else</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">        # Get the current screenshot</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        image </span><span style="--shiki-light:#000000;--shiki-dark:#81A1C1;">=</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> tasker</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">controller</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">cached_image</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">        # Register a custom action</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        tasker</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">resource</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">register_custom_action</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">MyAction</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;"> MyAction</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">())</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">        # Execute a mixed task chain</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        tasker</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">.</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">post_task</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">(</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click Confirm Icon</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">).</span><span style="--shiki-light:#000000;--shiki-dark:#88C0D0;">wait</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">()</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="resource-preparation" tabindex="-1"><a class="header-anchor" href="#resource-preparation"><span>Resource Preparation</span></a></h2><h3 id="file-structure-specification" tabindex="-1"><a class="header-anchor" href="#file-structure-specification"><span>File Structure Specification</span></a></h3><p><em>‚≠êIf you use the boilerplate, just modify it directly in <a href="https://github.com/MaaXYZ/MaaPracticeBoilerplate/tree/main/assets/resource" target="_blank" rel="noopener noreferrer">folder</a>.</em></p><div class="language-tree line-numbers-mode" data-highlighter="shiki" data-ext="tree" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-tree"><span class="line"><span>my_resource/</span></span>
<span class="line"><span>‚îú‚îÄ‚îÄ image/                # Image asset library</span></span>
<span class="line"><span>‚îÇ   ‚îú‚îÄ‚îÄ my_button_ok.png</span></span>
<span class="line"><span>‚îÇ   ‚îî‚îÄ‚îÄ my_icon_close.png</span></span>
<span class="line"><span>‚îú‚îÄ‚îÄ model/</span></span>
<span class="line"><span>‚îÇ   ‚îî‚îÄ‚îÄ ocr/              # Text recognition models</span></span>
<span class="line"><span>‚îÇ       ‚îú‚îÄ‚îÄ det.onnx</span></span>
<span class="line"><span>‚îÇ       ‚îú‚îÄ‚îÄ keys.txt</span></span>
<span class="line"><span>‚îÇ       ‚îî‚îÄ‚îÄ rec.onnx</span></span>
<span class="line"><span>‚îî‚îÄ‚îÄ pipeline/             # Task pipelines</span></span>
<span class="line"><span>    ‚îú‚îÄ‚îÄ my_main.json</span></span>
<span class="line"><span>    ‚îî‚îÄ‚îÄ my_subflow.json</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>You can modify the names of files and folders starting with &quot;my_&quot;, but the others have fixed file names and should not be changed. Here&#39;s a breakdown:</p><h3 id="pipeline-json-files" tabindex="-1"><a class="header-anchor" href="#pipeline-json-files"><span>Pipeline JSON Files</span></a></h3><p>The files in <code>my_resource/pipeline</code> contain the main script execution logic and recursively read all JSON format files in the directory.</p>`,27)),a("p",null,[i[1]||(i[1]=s("You can refer to the ")),t(e,{to:"/en-us/application/3.1-PipelineProtocol.html"},{default:l(()=>i[0]||(i[0]=[s("Task Pipeline Protocol")])),_:1,__:[0]}),i[2]||(i[2]=s(" for writing these files. You can find a simple ")),i[3]||(i[3]=a("a",{href:"https://github.com/MaaXYZ/MaaFramework/blob/main/sample/resource/pipeline/sample.json",target:"_blank",rel:"noopener noreferrer"},"demo",-1)),i[4]||(i[4]=s(" for reference."))]),i[9]||(i[9]=n('<p>Tools:</p><ul><li><a href="https://github.com/MaaXYZ/MaaFramework/blob/main/tools/pipeline.schema.json" target="_blank" rel="noopener noreferrer">JSON Schema</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=nekosu.maa-support" target="_blank" rel="noopener noreferrer">VSCode Extension</a><ul><li>Config resources based on <code>interface.json</code></li><li>Support going to task definition, finding task references, renaming task, completing task, click to launch task</li><li>Support launching as MaaPiCli</li><li>Support screencap and crop image after connected</li></ul></li></ul><h3 id="image-files" tabindex="-1"><a class="header-anchor" href="#image-files"><span>Image Files</span></a></h3><p>The files in <code>my_resource/image</code> are primarily used for template matching images, feature detection images, and other images required by the pipeline. They are read based on the <code>template</code> and other fields specified in the pipeline.</p><p>Please note that the images used need to be cropped from the lossless original image and scaled to 720p. <strong>UNLESS YOU EXACTLY KNOW HOW MAAFRAMEWORK PROCESSES, DO USE THE CROPPING TOOLS BELOW TO OBTAIN IMAGES.</strong></p><ul><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/tools/ImageCropper" target="_blank" rel="noopener noreferrer">Image Cropping and ROI Extraction Tool</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=nekosu.maa-support" target="_blank" rel="noopener noreferrer">VSCode Extension</a></li><li><a href="https://github.com/SweetSmellFox/MFATools" target="_blank" rel="noopener noreferrer">MFA Tools</a></li></ul><h3 id="text-recognition-model-files" tabindex="-1"><a class="header-anchor" href="#text-recognition-model-files"><span>Text Recognition Model Files</span></a></h3><p><em>‚≠êIf you use the boilerplate, just follow its documentation and run <code>configure.py</code> to automatically deploy the model file.</em></p><p>The files in <code>my_resource/model/ocr</code> are ONNX models obtained from <a href="https://github.com/PaddlePaddle/PaddleOCR" target="_blank" rel="noopener noreferrer">PaddleOCR</a> after conversion.</p><p>You can use our pre-converted files: <a href="https://github.com/MaaXYZ/MaaCommonAssets/tree/main/OCR" target="_blank" rel="noopener noreferrer">MaaCommonAssets</a>. Choose the language you need and store them according to the directory structure mentioned above in <a href="#prepare-resource-files">Prepare Resource Files</a>.</p><p>If needed, you can also fine-tune the official pre-trained models of PaddleOCR yourself (please refer to the official PaddleOCR documentation) and convert them to ONNX files for use. You can find conversion commands <a href="https://github.com/MaaXYZ/MaaCommonAssets/tree/main/OCR#command" target="_blank" rel="noopener noreferrer">here</a>.</p><h2 id="debug" tabindex="-1"><a class="header-anchor" href="#debug"><span>Debug</span></a></h2><ul><li><p>Use <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/README_en.md#development-tool" target="_blank" rel="noopener noreferrer">Development Tool</a>.</p></li><li><p>Some tools will generate <code>config/maa_option.json</code> file in the same directory, including:</p><ul><li><code>logging</code>: Save the log and generate <code>debug/maa.log</code>. Default true.</li><li><code>recording</code>: Save recording function, which will save all screenshots and operation data during operation. You can use <code>DbgController</code> for reproducible debugging. Default false.</li><li><code>save_draw</code>: Saves the image recognition visualization results. All image recognition visualization results drawings during the run will be saved. Default false.</li><li><code>show_hit_draw</code>: Displays the node hit pop-up window. Each time the recognition is successful, a pop-up window will display the recognition result. Default false.</li><li><code>stdout_level</code>: The console displays the log level. The default is 2 (Error), which can be set to 0 to turn off all console logs, or to 7 to turn on all console logs.</li></ul></li><li><p>If you integrate it yourself, you can enable debugging options through the <code>Toolkit.init_option</code> / <code>MaaToolkitConfigInitOption</code> interface. The generated json file is the same as above.</p></li></ul><h2 id="run" tabindex="-1"><a class="header-anchor" href="#run"><span>Run</span></a></h2><p>You can using Generic UI (MaaPiCli, MFA, MFW, etc) or by writing integration code yourself.</p><h3 id="using-maapicli" tabindex="-1"><a class="header-anchor" href="#using-maapicli"><span>Using MaaPiCli</span></a></h3><p><em>‚≠êIf you use the boilerplate, follow its documentation directly and run <code>install.py</code> to automatically package the relevant files.</em></p><p>Use MaaPiCli in the <code>bin</code> folder of the Release package, and write <code>interface.json</code> and place it in the same directory to use it.</p><p>The Cli has completed basic function development, and more functions are being continuously improved! Detailed documentation needs to be further improved. Currently, you can refer to <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/sample/interface.json" target="_blank" rel="noopener noreferrer">Sample</a> to write it.</p><p>Examples:</p><ul><li><a href="https://github.com/MaaXYZ/M9A/tree/main/assets/interface.json" target="_blank" rel="noopener noreferrer">M9A</a></li></ul><h3 id="writing-integration-code-yourself" tabindex="-1"><a class="header-anchor" href="#writing-integration-code-yourself"><span>Writing Integration Code Yourself</span></a></h3>',22)),a("p",null,[i[6]||(i[6]=s("Please refer to the ")),t(e,{to:"/en-us/application/2.1-Integration.html"},{default:l(()=>i[5]||(i[5]=[s("Integration Documentation")])),_:1,__:[5]}),i[7]||(i[7]=s("."))])])}const F=h(o,[["render",d]]),E=JSON.parse('{"path":"/en-us/application/1.1-QuickStarted.html","title":"Quick Start","lang":"en-US","frontmatter":{"description":"Quick Start Development Approach MaaFramework provides three integration solutions to meet different development scenarios: Approach 1: Pure JSON Low-Code Programming (General U...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quick Start\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-19T09:11:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaFramework\\"}]}"],["meta",{"property":"og:url","content":"https://maafw.xyz/MaaFramework-Docs-Website/en-us/application/1.1-QuickStarted.html"}],["meta",{"property":"og:site_name","content":"MaaFramework"}],["meta",{"property":"og:title","content":"Quick Start"}],["meta",{"property":"og:description","content":"Quick Start Development Approach MaaFramework provides three integration solutions to meet different development scenarios: Approach 1: Pure JSON Low-Code Programming (General U..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-19T09:11:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-19T09:11:31.000Z"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://maafw.xyz/MaaFramework-Docs-Website/zh-cn/application/1.1-QuickStarted.html"}]]},"git":{"createdTime":1750324291000,"updatedTime":1750324291000,"contributors":[{"name":"weinibuliu","username":"weinibuliu","email":"weinibuliu@outlook.com","commits":1,"url":"https://github.com/weinibuliu"}]},"readingTime":{"minutes":3.18,"words":955},"filePathRelative":"en-us/application/1.1-QuickStarted.md","autoDesc":true}');export{F as comp,E as data};
