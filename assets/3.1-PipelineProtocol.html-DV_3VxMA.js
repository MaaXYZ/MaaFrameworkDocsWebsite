import{_ as d,c as p,a,b as s,d as e,e as l,w as t,r as h,o as r}from"./app-DhFehVeD.js";const o={};function k(c,i){const n=h("RouteLink");return r(),p("div",null,[i[20]||(i[20]=a(`<h1 id="任务流水线-pipeline-协议" tabindex="-1"><a class="header-anchor" href="#任务流水线-pipeline-协议"><span>任务流水线（Pipeline）协议</span></a></h1><h2 id="基础格式" tabindex="-1"><a class="header-anchor" href="#基础格式"><span>基础格式</span></a></h2><p>任务流水线采用 JSON 格式描述，由若干节点（Node）构成，每个节点包含以下核心属性：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">NodeA</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">OCR</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">    // 识别算法</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#008000;--shiki-dark:#616E88;">       // 执行动作</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next: [                 // 后继节点列表</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;">NodeB</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;">NodeC</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">        ],</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">        // 其他扩展属性...</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">    // 其他节点定义...</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="执行逻辑" tabindex="-1"><a class="header-anchor" href="#执行逻辑"><span>执行逻辑</span></a></h2><h3 id="流程控制机制" tabindex="-1"><a class="header-anchor" href="#流程控制机制"><span>流程控制机制</span></a></h3><ol><li><p><strong>任务触发</strong></p><ul><li>通过 tasker.post_task 接口指定入口节点启动任务</li></ul></li><li><p><strong>顺序检测</strong></p><ul><li>对当前节点的 next 列表进行顺序检测</li><li>依次尝试识别每个子节点配置的 recognition 特征</li></ul></li><li><p><strong>中断机制</strong></p><ul><li>当检测到某个子节点匹配成功时，立即终止后续节点检测</li><li>执行匹配节点的 action 定义的操作</li></ul></li><li><p><strong>后继处理</strong></p><ul><li>操作执行完成后，将激活节点切换为当前节点</li><li>重复执行上述检测流程</li></ul></li></ol><h3 id="终止条件" tabindex="-1"><a class="header-anchor" href="#终止条件"><span>终止条件</span></a></h3><p>当满足以下任意条件时，任务流程终止：</p><ul><li>当前节点的 next 列表为空</li><li>所有后继节点持续检测失败直至超时</li></ul><h2 id="应用示例" tabindex="-1"><a class="header-anchor" href="#应用示例"><span>应用示例</span></a></h2><h3 id="场景描述" tabindex="-1"><a class="header-anchor" href="#场景描述"><span>场景描述</span></a></h3><p>Android 设置界面存在菜单 <code>显示</code>/<code>存储</code>/<code>无障碍</code>，其中 <code>存储</code> 打开后包含二级菜单 <code>游戏</code>/<code>应用</code>。</p><h3 id="配置示例" tabindex="-1"><a class="header-anchor" href="#配置示例"><span>配置示例</span></a></h3><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">开始示例</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">进入显示</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">进入存储</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">进入无障碍</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">        ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">进入显示</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;"> XXX</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">进入存储</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">recognition</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;"> XXX</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Click</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">进入游戏二级菜单</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">进入应用二级菜单</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">        ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">进入无障碍</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">进入游戏二级菜单</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Swipe</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">next</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> []</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">进入应用二级菜单</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行过程推演" tabindex="-1"><a class="header-anchor" href="#执行过程推演"><span>执行过程推演</span></a></h3><h4 id="情况一" tabindex="-1"><a class="header-anchor" href="#情况一"><span>情况一</span></a></h4><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-mermaid"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">    graph LR</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A[**开始示例**] --&gt;|1.识别| B[**进入显示**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        B --&gt;|2.识别失败，返回识别下一节点| A</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A --&gt;|3.识别| C[**进入存储**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A --&gt;|未进行| ZA[**进入无障碍**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        C --&gt;|4.识别成功，执行动作| D[点击]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        D --&gt;|5.节点完成| E[识别 **进入存储** 的 next]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        E --&gt;|6.识别| F[**进入游戏二级菜单**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        E --&gt;|未进行| G[**进入应用二级菜单**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        F --&gt;|7.识别成功，执行动作| I[滑动]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        I --&gt;|8.节点完成| J[识别 **进入游戏二级菜单** 的 next]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        J --&gt;|9.next 为空| H[任务完成]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="情况二" tabindex="-1"><a class="header-anchor" href="#情况二"><span>情况二</span></a></h4><div class="language-mermaid line-numbers-mode" data-highlighter="shiki" data-ext="mermaid" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-mermaid"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">    graph LR</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A[**开始示例**] --&gt;|1.识别| B[**进入显示**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        B --&gt;|2.识别失败，返回识别下一节点| A</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A --&gt;|3.识别| Y[**进入存储**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        Y --&gt;|4.识别失败，返回识别下一节点| A</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A --&gt;|5.识别| Z[**进入无障碍**]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        Z --&gt;|6.识别失败，返回识别下一节点| A</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A --&gt;|7.next 全部未命中|E{是否超时？}</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        E --&gt;|8.1.超时| ZA[任务超时]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        E --&gt;|8.2.未超时| A</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        A --&gt;|9.再次识别| B</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;">        B --&gt;|10.识别成功，执行动作| F[点击]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="属性字段" tabindex="-1"><a class="header-anchor" href="#属性字段"><span>属性字段</span></a></h2><p><strong>注：对于必选字段，Pipeline JSON 文件中仍可为空，但需在实际执行前通过接口设置。</strong></p><ul><li><p><code>recognition</code> : <em>string</em><br> 识别算法类型。可选，默认 <code>DirectHit</code> 。<br> 可选的值：<code>DirectHit</code> | <code>TemplateMatch</code> | <code>FeatureMatch</code> | <code>ColorMatch</code> | <code>OCR</code> | <code>NeuralNetworkClassify</code> | <code>NeuralNetworkDetect</code> | <code>Custom</code><br> 详见 <a href="#%E7%AE%97%E6%B3%95%E7%B1%BB%E5%9E%8B">算法类型</a>。</p></li><li><p><code>action</code>: <em>string</em><br> 执行的动作。可选，默认 <code>DoNothing</code> 。<br> 可选的值：<code>DoNothing</code> | <code>Click</code> | <code>LongPress</code> | <code>Swipe</code> | <code>MultiSwipe</code> | <code>Key</code> | <code>InputText</code> | <code>StartApp</code> | <code>StopApp</code> | <code>StopTask</code> | <code>Command</code> | <code>Custom</code><br> 详见 <a href="#%E5%8A%A8%E4%BD%9C%E7%B1%BB%E5%9E%8B">动作类型</a>。</p></li><li><p><code>next</code> : <em>string</em> | <em>list&lt;string, &gt;</em><br> 接下来要执行的节点列表。可选，默认空。<br> 按顺序识别 next 中的每个节点，只执行第一个识别到的。</p></li><li><p><code>interrupt</code> : <em>string</em> | <em>list&lt;string, &gt;</em><br><code>next</code> 中全部未识别到时的候补节点列表，会执行类似中断操作。可选，默认空。<br> 若 <code>next</code> 中的节点全部未识别到，则会按序识别该中断列表中的每个节点，并执行第一个识别到的。在后续节点全部执行完成后，重新跳转到该节点来再次尝试识别。<br> 例如: A: { next: [B, C], interrupt: [D, E] }<br> 当 B, C 未识别到而识别到 D 时，会去完整的执行 D 及 D.next。但当 D 的流水线完全执行完毕后。会再次回到节点 A，继续尝试识别 B, C, D, E 。<br> 该字段多用于异常处理，例如 D 是识别 “网络断开提示框”，在点击确认并等待网络连接成功后，继续之前的节点流程。</p></li><li><p><code>is_sub</code>: <em>bool</em><br><strong>（已在 2.x 版本中废弃，但保留兼容性，推荐使用 <code>interrupt</code> 替代）</strong><br> 是否是子节点。可选，默认 false 。<br> 如果是子节点，执行完本节点（及后续 next 等）后，会返回来再次识别本节点 <strong>所在的</strong> next 列表。<br> 例如：A.next = [B, Sub_C, D]，这里的 Sub_C.is_sub = true，<br> 若匹配上了 Sub_C，在完整执行完 Sub_C 及后续节点后，会返回来再次识别 [B, Sub_C, D] 并执行命中项及后续节点。</p></li><li><p><code>rate_limit</code>: <em>uint</em><br> 识别速率限制，单位毫秒。可选，默认 1000 。<br> 每轮识别 <code>next</code> + <code>interrupt</code> 最低消耗 <code>rate_limit</code> 毫秒，不足的时间将会 sleep 等待。</p></li><li><p><code>timeout</code>: <em>uint</em><br><code>next</code> + <code>interrupt</code> 识别超时时间，毫秒。可选，默认 20 * 1000 。<br> 具体逻辑为 <code>while(!timeout) { foreach(next + interrupt); sleep_until(rate_limit); }</code> 。</p></li><li><p><code>on_error</code> : <em>string</em> | <em>list&lt;string, &gt;</em><br> 当识别超时，或动作执行失败后，接下来会执行该列表中的节点。可选，默认空。</p></li><li><p><code>timeout_next</code>: <em>string</em> | <em>list&lt;string, &gt;</em><br><strong>（已在 2.x 版本中废弃，但保留兼容性，推荐使用 <code>on_error</code> 替代）</strong><br> 超时后执行的节点列表。可选，默认空。</p></li><li><p><code>inverse</code>: <em>bool</em><br> 反转识别结果，识别到了当做没识别到，没识别到的当做识别到了。可选，默认 false 。<br> 请注意由此识别出的节点，Click 等动作的点击自身将失效（因为实际并没有识别到东西），若有需求可单独设置 <code>target</code> 。</p></li><li><p><code>enabled</code>: <em>bool</em><br> 是否启用该 node。可选，默认 true 。<br> 若为 false，其他 node 的 next 列表中的该 node 会被跳过，既不会被识别也不会被执行。</p></li><li><p><code>pre_delay</code>: <em>uint</em><br> 识别到 到 执行动作前 的延迟，毫秒。可选，默认 200 。<br> 推荐尽可能增加中间过程节点，少用延迟，不然既慢还不稳定。</p></li><li><p><code>post_delay</code>: <em>uint</em><br> 执行动作后 到 识别 next 的延迟，毫秒。可选，默认 200 。<br> 推荐尽可能增加中间过程节点，少用延迟，不然既慢还不稳定。</p></li><li><p><code>pre_wait_freezes</code>: <em>uint</em> | <em>object</em><br> 识别到 到 执行动作前，等待画面不动了的时间，毫秒。可选，默认 0 ，即不等待。<br> 连续 <code>pre_wait_freezes</code> 毫秒 画面 <strong>没有较大变化</strong> 才会退出动作。<br> 若为 object，可设置更多参数，详见 <a href="#%E7%AD%89%E5%BE%85%E7%94%BB%E9%9D%A2%E9%9D%99%E6%AD%A2">等待画面静止</a>。<br> 具体的顺序为 <code>pre_wait_freezes</code> - <code>pre_delay</code> - <code>action</code> - <code>post_wait_freezes</code> - <code>post_delay</code> 。</p></li><li><p><code>post_wait_freezes</code>: <em>uint</em> | <em>object</em><br> 行动动作后 到 识别 next，等待画面不动了的时间，毫秒。可选，默认 0 ，即不等待。<br> 其余逻辑同 <code>pre_wait_freezes</code>。</p></li><li><p><code>focus</code>: <em>any</em><br> 关注节点，会额外产生部分回调消息。可选，默认 null，不产生回调消息。<br> 详见 <a href="#%E8%8A%82%E7%82%B9%E9%80%9A%E7%9F%A5">节点通知</a>。</p></li></ul><h2 id="默认属性" tabindex="-1"><a class="header-anchor" href="#默认属性"><span>默认属性</span></a></h2><p>请参考 <a href="https://github.com/MaaXYZ/MaaFramework/blob/main/sample/resource/default_pipeline.json" target="_blank" rel="noopener noreferrer">default_pipeline.json</a><br><code>Default</code> 中可设置所有字段的默认值；算法/动作名 的对象中可设置对应算法/动作 的默认参数值。</p><h2 id="算法类型" tabindex="-1"><a class="header-anchor" href="#算法类型"><span>算法类型</span></a></h2><h3 id="directhit" tabindex="-1"><a class="header-anchor" href="#directhit"><span><code>DirectHit</code></span></a></h3><p>直接命中，即不进行识别，直接执行动作。</p><h3 id="templatematch" tabindex="-1"><a class="header-anchor" href="#templatematch"><span><code>TemplateMatch</code></span></a></h3><p>模板匹配，即“找图”。</p><p>该算法属性需额外部分字段：</p>`,31)),s("ul",null,[i[15]||(i[15]=a("<li><p><code>roi</code>: <em>array&lt;int, 4&gt;</em> | <em>string</em><br> 识别区域坐标。可选，默认 [0, 0, 0, 0] ，即全屏。</p><ul><li><em>array&lt;int, 4&gt;</em>: 识别区域坐标，[x, y, w, h]，若希望全屏可设为 [0, 0, 0, 0] 。</li><li><em>string</em>: 填写节点名，在之前执行过的某节点识别到的目标范围内识别。</li></ul></li><li><p><code>roi_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>roi</code> 的基础上额外移动再作为范围，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li>",2)),s("li",null,[s("p",null,[i[1]||(i[1]=s("code",null,"template",-1)),i[2]||(i[2]=e(": ")),i[3]||(i[3]=s("em",null,"string",-1)),i[4]||(i[4]=e(" | ")),i[5]||(i[5]=s("em",null,"list<string, >",-1)),i[6]||(i[6]=s("br",null,null,-1)),i[7]||(i[7]=e(" 模板图片路径，需要 ")),i[8]||(i[8]=s("code",null,"image",-1)),i[9]||(i[9]=e(" 文件夹的相对路径。必选。")),i[10]||(i[10]=s("br",null,null,-1)),i[11]||(i[11]=e(" 所使用的图片需要是无损原图缩放到 720p 后的裁剪。请参考 ")),l(n,{to:"/zh-cn/application/1.1-%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B.html#%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6"},{default:t(()=>i[0]||(i[0]=[e("这里")])),_:1,__:[0]}),i[12]||(i[12]=e("。")),i[13]||(i[13]=s("br",null,null,-1)),i[14]||(i[14]=e(" 支持填写文件夹路径，将递归加载其中所有图片文件。"))])]),i[16]||(i[16]=a('<li><p><code>threshold</code>: <em>double</em> | <em>list&lt;double, &gt;</em><br> 模板匹配阈值。可选，默认 0.7 。<br> 若为数组，长度需和 <code>template</code> 数组长度相同。</p></li><li><p><code>order_by</code>: <em>string</em><br> 结果排序方式。可选，默认 <code>Horizontal</code>。<br> 可选的值：<code>Horizontal</code> | <code>Vertical</code> | <code>Score</code> | <code>Random</code> 。<br> 可结合 <code>index</code> 字段使用。</p></li><li><p><code>index</code>: <em>int</em><br> 命中第几个结果。可选，默认 0 。<br> 假设共有 N 个结果，则 <code>index</code> 的取值范围为 [-N, N - 1] ，其中负数使用类 Python 的规则转换为 N - index 。若超出范围，则视为当前识别无结果。</p></li><li><p><code>method</code>: <em>int</em><br> 模板匹配算法，即 cv::TemplateMatchModes。可选，默认 5 。<br> 仅支持 1、3、5，可简单理解为越大的越精确，但也会更慢。<br> 详情请参考 <a href="https://docs.opencv.org/4.x/df/dfb/group__imgproc__object.html" target="_blank" rel="noopener noreferrer">OpenCV 官方文档</a>。</p></li><li><p><code>green_mask</code>: <em>bool</em><br> 是否进行绿色掩码。可选，默认 false 。<br> 若为 true，可以将图片中不希望匹配的部分涂绿 RGB: (0, 255, 0)，则不对绿色部分进行匹配。</p></li>',5))]),i[21]||(i[21]=a(`<h3 id="featurematch" tabindex="-1"><a class="header-anchor" href="#featurematch"><span><code>FeatureMatch</code></span></a></h3><p>特征匹配，泛化能力更强的“找图”，具有抗透视、抗尺寸变化等特点。</p><p>该算法属性需额外部分字段：</p><ul><li><p><code>roi</code>: <em>array&lt;int, 4&gt;</em> | <em>string</em><br> 同 <code>TemplateMatch</code>.<code>roi</code> 。</p></li><li><p><code>roi_offset</code>: <em>array&lt;int, 4&gt;</em><br> 同 <code>TemplateMatch</code>.<code>roi_offset</code> 。</p></li><li><p><code>template</code>: <em>string</em> | <em>list&lt;string, &gt;</em><br> 模板图片路径，需要 <code>image</code> 文件夹的相对路径。必选。<br> 支持填写文件夹路径，将递归加载其中所有图片文件。</p></li><li><p><code>count</code>: <em>int</em><br> 匹配的特征点的最低数量要求（阈值）。可选，默认 4 。</p></li><li><p><code>order_by</code>: <em>string</em><br> 结果排序方式。可选，默认 <code>Horizontal</code> 。<br> 可选的值：<code>Horizontal</code> | <code>Vertical</code> | <code>Score</code> | <code>Area</code> | <code>Random</code> 。<br> 可结合 <code>index</code> 字段使用。</p></li><li><p><code>index</code>: <em>int</em><br> 命中第几个结果。可选，默认 0 。<br> 假设共有 N 个结果，则 <code>index</code> 的取值范围为 [-N, N - 1] ，其中负数使用类 Python 的规则转换为 N - index 。若超出范围，则视为当前识别无结果。</p></li><li><p><code>green_mask</code>: <em>bool</em><br> 是否进行绿色掩码。可选，默认 false 。<br> 若为 true，可以将图片中不希望匹配的部分涂绿 RGB: (0, 255, 0)，则不对绿色部分进行匹配。</p></li><li><p><code>detector</code>: <em>string</em><br> 特征检测器。可选，默认 <code>SIFT</code> 。<br> 目前支持以下算法：</p><ul><li>SIFT<br> 计算复杂度高，具有尺度不变性、旋转不变性。效果最好。</li><li>KAZE<br> 适用于2D和3D图像，具有尺度不变性、旋转不变性。</li><li>AKAZE<br> 计算速度较快，具有尺度不变性、旋转不变性。</li><li>BRISK<br> 计算速度非常快，具有尺度不变性、旋转不变性。</li><li>ORB<br> 计算速度非常快，具有旋转不变性。但不具有尺度不变性。</li></ul><p>各算法特点详情可自行进一步查询。</p></li><li><p><code>ratio</code>: <em>double</em><br> KNN 匹配算法的距离比值，[0 - 1.0] , 越大则匹配越宽松（更容易连线）。可选，默认 0.6 。</p></li></ul><h3 id="colormatch" tabindex="-1"><a class="header-anchor" href="#colormatch"><span><code>ColorMatch</code></span></a></h3><p>颜色匹配，即“找色”。</p><p>该算法属性需额外部分字段：</p><ul><li><p><code>roi</code>: <em>array&lt;int, 4&gt;</em> | <em>string</em><br> 同 <code>TemplateMatch</code>.<code>roi</code> 。</p></li><li><p><code>roi_offset</code>: <em>array&lt;int, 4&gt;</em><br> 同 <code>TemplateMatch</code>.<code>roi_offset</code> 。</p></li><li><p><code>method</code>: <em>int</em><br> 颜色匹配方式。即 cv::ColorConversionCodes。可选，默认 4 (RGB) 。<br> 常用值：4 (RGB, 3 通道), 40 (HSV, 3 通道), 6 (GRAY, 1 通道)。<br> 详情请参考 <a href="https://docs.opencv.org/4.x/d8/d01/group__imgproc__color__conversions.html" target="_blank" rel="noopener noreferrer">OpenCV 官方文档</a>。</p></li><li><p><code>lower</code>: <em>list&lt;int, &gt;</em> | <em>list&lt;list&lt;int, &gt;&gt;</em><br> 颜色下限值。必选。最内层 list 长度需和 <code>method</code> 的通道数一致。</p></li><li><p><code>upper</code>: <em>list&lt;int, &gt;</em> | <em>list&lt;list&lt;int, &gt;&gt;</em><br> 颜色上限值。必选。最内层 list 长度需和 <code>method</code> 的通道数一致。</p></li><li><p><code>count</code>: <em>int</em><br> 符合的像素点的最低数量要求（阈值）。可选，默认 1。</p></li><li><p><code>order_by</code>: <em>string</em><br> 结果排序方式。可选，默认 <code>Horizontal</code> 。<br> 可选的值：<code>Horizontal</code> | <code>Vertical</code> | <code>Score</code> | <code>Area</code> | <code>Random</code> 。<br> 可结合 <code>index</code> 字段使用。</p></li><li><p><code>index</code>: <em>int</em><br> 命中第几个结果。可选，默认 0 。<br> 假设共有 N 个结果，则 <code>index</code> 的取值范围为 [-N, N - 1] ，其中负数使用类 Python 的规则转换为 N - index 。若超出范围，则视为当前识别无结果。</p></li><li><p><code>connected</code>: <em>bool</em><br> 是否是相连的点才会被计数。可选，默认 false 。<br> 若为是，在完成颜色过滤后，则只会计数像素点 <strong>全部相连</strong> 的最大块。<br> 若为否，则不考虑这些像素点是否相连。</p></li></ul><h3 id="ocr" tabindex="-1"><a class="header-anchor" href="#ocr"><span><code>OCR</code></span></a></h3><p>文字识别。</p><p>该算法属性需额外部分字段：</p><ul><li><p><code>roi</code>: <em>array&lt;int, 4&gt;</em> | <em>string</em><br> 同 <code>TemplateMatch</code>.<code>roi</code> 。</p></li><li><p><code>roi_offset</code>: <em>array&lt;int, 4&gt;</em><br> 同 <code>TemplateMatch</code>.<code>roi_offset</code> 。</p></li><li><p><code>expected</code>: <em>string</em> | <em>list&lt;string, &gt;</em><br> 期望的结果，支持正则。必选。</p></li><li><p><code>threshold</code>: <em>double</em><br> 模型置信度阈值。可选，默认 0.3 。</p></li><li><p><code>replace</code>: <em>array&lt;string, 2&gt;</em> | <em>list&lt;array&lt;string, 2&gt;&gt;</em><br> 部分文字识别结果不准确，进行替换。可选。</p></li><li><p><code>order_by</code>: <em>string</em><br> 结果排序方式。可选，默认 <code>Horizontal</code>。<br> 可选的值：<code>Horizontal</code> | <code>Vertical</code> | <code>Area</code> | <code>Length</code> | <code>Random</code> 。<br> 可结合 <code>index</code> 字段使用。</p></li><li><p><code>index</code>: <em>int</em><br> 命中第几个结果。可选，默认 0 。<br> 假设共有 N 个结果，则 <code>index</code> 的取值范围为 [-N, N - 1] ，其中负数使用类 Python 的规则转换为 N - index 。若超出范围，则视为当前识别无结果。</p></li><li><p><code>only_rec</code>: <em>bool</em><br> 是否仅识别（不进行检测，需要精确设置 <code>roi</code>）。可选，默认 false 。</p></li><li><p><code>model</code>: <em>string</em><br> 模型 <strong>文件夹</strong> 路径。使用 <code>model/ocr</code> 文件夹的相对路径。可选，默认为空。<br> 若为空，则为 <code>model/ocr</code> 根目录下的模型文件。<br> 文件夹中需要包含 <code>rec.onnx</code>, <code>det.onnx</code>, <code>keys.txt</code> 三个文件。</p></li></ul><h3 id="neuralnetworkclassify" tabindex="-1"><a class="header-anchor" href="#neuralnetworkclassify"><span><code>NeuralNetworkClassify</code></span></a></h3><p>深度学习分类，判断图像中的 <strong>固定位置</strong> 是否为预期的“类别”。</p><p>该算法属性需额外部分字段：</p><ul><li><p><code>roi</code>: <em>array&lt;int, 4&gt;</em> | <em>string</em><br> 同 <code>TemplateMatch</code>.<code>roi</code> 。</p></li><li><p><code>roi_offset</code>: <em>array&lt;int, 4&gt;</em><br> 同 <code>TemplateMatch</code>.<code>roi_offset</code> 。</p></li><li><p><code>labels</code>: <em>list&lt;string, &gt;</em><br> 标注，即每个分类的名字。可选。<br> 仅影响调试图片及日志等，若未填写则会填充 &quot;Unknown&quot; 。</p></li><li><p><code>model</code>: <em>string</em><br> 模型文件路径。使用 <code>model/classify</code> 文件夹的相对路径。必选。<br> 目前仅支持 ONNX 模型，参考 <a href="https://github.com/MaaXYZ/MaaNeuralNetworkCookbook/tree/main/NeuralNetworkClassify" target="_blank" rel="noopener noreferrer">NNClassify 食谱</a>。</p></li><li><p><code>expected</code>: <em>int</em> | <em>list&lt;int, &gt;</em><br> 期望的分类下标。</p></li><li><p><code>order_by</code>: <em>string</em><br> 结果排序方式。可选，默认 <code>Horizontal</code> 。<br> 可选的值：<code>Horizontal</code> | <code>Vertical</code> | <code>Score</code> | <code>Random</code> 。<br> 可结合 <code>index</code> 字段使用。</p></li><li><p><code>index</code>: <em>int</em><br> 命中第几个结果。可选，默认 0 。<br> 假设共有 N 个结果，则 <code>index</code> 的取值范围为 [-N, N - 1] ，其中负数使用类 Python 的规则转换为 N - index 。若超出范围，则视为当前识别无结果。</p></li></ul><p>举例：例如画面中 <strong>固定位置</strong> 可能出现 猫、狗、老鼠，我们训练了支持该三分类的模型。<br> 希望识别到 猫 或 老鼠 才点击，而识别到 狗 不点击，则相关字段为：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">labels</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Cat</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Dog</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Mouse</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">],</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">expected</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;">0</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 2</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这些值需要与模型实际输出相符。</p><h3 id="neuralnetworkdetect" tabindex="-1"><a class="header-anchor" href="#neuralnetworkdetect"><span><code>NeuralNetworkDetect</code></span></a></h3><p>深度学习目标检测，高级版“找图”。</p><p>与分类器主要区别在于“找”，即支持任意位置。但通常来说模型复杂度会更高，需要更多的训练集、训练时间，使用时的资源占用（推理开销）也会成倍上涨。</p><p>该算法属性需额外部分字段：</p><ul><li><p><code>roi</code>: <em>array&lt;int, 4&gt;</em> | <em>string</em><br> 同 <code>TemplateMatch</code>.<code>roi</code> 。</p></li><li><p><code>roi_offset</code>: <em>array&lt;int, 4&gt;</em><br> 同 <code>TemplateMatch</code>.<code>roi_offset</code> 。</p></li><li><p><code>labels</code>: <em>list&lt;string, &gt;</em><br> 标注，即每个分类的名字。可选。<br> 仅影响调试图片及日志等，若未填写则会填充 &quot;Unknown&quot; 。</p></li><li><p><code>model</code>: <em>string</em><br> 模型文件路径。使用 <code>model/detect</code> 文件夹的相对路径。必选。<br> 目前支持 YoloV8 ONNX 模型，其他同样输入输出的 Yolo 模型理论上也可以支持，但未经测试。<br> 训练参考 <a href="https://github.com/MaaXYZ/MaaNeuralNetworkCookbook/tree/main/NeuralNetworkDetect" target="_blank" rel="noopener noreferrer">NNDetect 食谱</a>。</p></li><li><p><code>expected</code>: <em>int</em> | <em>list&lt;int, &gt;</em><br> 期望的分类下标。</p></li><li><p><code>threshold</code>: <em>double</em> | <em>list&lt;double, &gt;</em><br> 模型置信度阈值。可选，默认 0.3 。<br> 若为数组，长度需和 <code>expected</code> 数组长度相同。</p></li><li><p><code>order_by</code>: <em>string</em><br> 结果排序方式。可选，默认 <code>Horizontal</code> 。<br> 可选的值：<code>Horizontal</code> | <code>Vertical</code> | <code>Score</code> | <code>Area</code> | <code>Random</code> 。<br> 可结合 <code>index</code> 字段使用。</p></li><li><p><code>index</code>: <em>int</em><br> 命中第几个结果。可选，默认 0 。<br> 假设共有 N 个结果，则 <code>index</code> 的取值范围为 [-N, N - 1] ，其中负数使用类 Python 的规则转换为 N - index 。若超出范围，则视为当前识别无结果。</p></li></ul><p>举例：例如画面中可能出现 猫、狗、老鼠，我们训练了支持该三分类的检测模型。<br> 希望检测到 猫 或 老鼠 才点击，而识别到 狗 不点击，则相关字段为：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">labels</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Cat</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Dog</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Mouse</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">],</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">expected</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;">0</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 2</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意这些值需要与模型实际输出相符。</p><h3 id="custom" tabindex="-1"><a class="header-anchor" href="#custom"><span><code>Custom</code></span></a></h3><p>执行通过 <code>MaaResourceRegisterCustomRecognition</code> 接口传入的识别器句柄。</p><p>该算法属性需额外部分字段：</p><ul><li><p><code>custom_recognition</code>: <em>string</em><br> 识别名，同注册接口传入的识别名。同时会通过 <code>MaaCustomRecognitionCallback</code>.<code>custom_recognition_name</code> 传出。必选。</p></li><li><p><code>custom_recognition_param</code>: <em>any</em><br> 识别参数，任意类型，会通过 <code>MaaCustomRecognitionCallback</code>.<code>custom_recognition_param</code> 传出。可选，默认空 json，即 <code>{}</code> 。</p></li><li><p><code>roi</code>: <em>array&lt;int, 4&gt;</em> | <em>string</em><br> 同 <code>TemplateMatch</code>.<code>roi</code>，会通过 <code>MaaCustomRecognitionCallback</code>.<code>roi</code> 传出。可选，默认 [0, 0, 0, 0] 。</p></li><li><p><code>roi_offset</code>: <em>array&lt;int, 4&gt;</em><br> 同 <code>TemplateMatch</code>.<code>roi_offset</code> 。</p></li></ul><h2 id="动作类型" tabindex="-1"><a class="header-anchor" href="#动作类型"><span>动作类型</span></a></h2><h3 id="donothing" tabindex="-1"><a class="header-anchor" href="#donothing"><span><code>DoNothing</code></span></a></h3><p>什么都不做。</p><h3 id="click" tabindex="-1"><a class="header-anchor" href="#click"><span><code>Click</code></span></a></h3><p>点击。</p><p>该动作属性需额外部分字段：</p><ul><li><p><code>target</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 点击的位置。可选，默认 true 。</p><ul><li><em>true</em>: 点击本节点中刚刚识别到的目标（即点击自身）。</li><li><em>string</em>: 填写节点名，点击之前执行过的某节点识别到的目标。</li><li><em>array&lt;int, 4&gt;</em>: 点击固定坐标区域内随机一点，[x, y, w, h]，若希望全屏可设为 [0, 0, 0, 0] 。</li></ul></li><li><p><code>target_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>target</code> 的基础上额外移动再点击，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li></ul><h3 id="longpress" tabindex="-1"><a class="header-anchor" href="#longpress"><span><code>LongPress</code></span></a></h3><p>长按。</p><p>该动作属性需额外部分字段：</p><ul><li><p><code>target</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 长按的位置。可选，默认 true 。值同上述 <code>Click</code>.<code>target</code> 。</p></li><li><p><code>target_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>target</code> 的基础上额外移动再长按，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li><li><p><code>duration</code>: <em>uint</em><br> 长按持续时间，单位毫秒。可选，默认 1000 。</p></li></ul><h3 id="swipe" tabindex="-1"><a class="header-anchor" href="#swipe"><span><code>Swipe</code></span></a></h3><p>线性滑动。</p><p>该动作属性需额外部分字段：</p><ul><li><p><code>begin</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 滑动起点。可选，默认 true 。值同上述 <code>Click</code>.<code>target</code> 。</p></li><li><p><code>begin_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>begin</code> 的基础上额外移动再作为起点，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li><li><p><code>end</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 滑动终点。可选，默认 true 。值同上述 <code>Click</code>.<code>target</code> 。</p></li><li><p><code>end_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>end</code> 的基础上额外移动再作为终点，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li><li><p><code>duration</code>: <em>uint</em><br> 滑动持续时间，单位毫秒。可选，默认 200 。</p></li></ul><h3 id="multiswipe" tabindex="-1"><a class="header-anchor" href="#multiswipe"><span><code>MultiSwipe</code></span></a></h3><p>多指线性滑动。</p><p>该动作属性需额外部分字段：</p><ul><li><p><code>swipes</code>: <em>list&lt;object,&gt;</em><br> 多个滑动的数组。必选。<br> 数组元素顺序没有影响，只基于 <code>starting</code> 确定顺序。</p><ul><li><p><code>starting</code>: <em>uint</em><br> 滑动起始时间，单位毫秒。可选，默认 0 。<br><code>MultiSwipe</code> 额外字段，该滑动会在本 action 中第 <code>starting</code> 毫秒才开始。</p></li><li><p><code>begin</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 滑动起点。可选，默认 true 。值同上述 <code>Click</code>.<code>target</code> 。</p></li><li><p><code>begin_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>begin</code> 的基础上额外移动再作为起点，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li><li><p><code>end</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 滑动终点。可选，默认 true 。值同上述 <code>Click</code>.<code>target</code> 。</p></li><li><p><code>end_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>end</code> 的基础上额外移动再作为终点，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li><li><p><code>duration</code>: <em>uint</em><br> 滑动持续时间，单位毫秒。可选，默认 200 。</p></li></ul></li></ul><p>举例：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">A</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">MultiSwipe</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">swipes</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">            {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">                &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">begin</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;"> xxx</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">                &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">end</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;"> xxx</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">            },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">            {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">                &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">starting</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 500</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">                &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">begin</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;"> xxx</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">                &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">end</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#CD3131;--shiki-dark:#D8DEE9;"> xxx</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">            }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">        ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="key" tabindex="-1"><a class="header-anchor" href="#key"><span><code>Key</code></span></a></h3><p>按键。</p><ul><li><p><code>key</code>: <em>int</em> | <em>list&lt;int, &gt;</em><br> 要按的键，仅支持对应控制器的虚拟按键码。</p><ul><li><a href="https://developer.android.com/reference/android/view/KeyEvent" target="_blank" rel="noopener noreferrer">Adb 控制器</a></li><li><a href="https://learn.microsoft.com/en-us/windows/win32/inputdev/virtual-key-codes" target="_blank" rel="noopener noreferrer">Win32 控制器</a></li></ul></li></ul><h3 id="inputtext" tabindex="-1"><a class="header-anchor" href="#inputtext"><span><code>InputText</code></span></a></h3><p>输入文本。</p><ul><li><code>input_text</code>: <em>string</em><br> 要输入的文本，部分控制器仅支持 ascii 。</li></ul><h3 id="startapp" tabindex="-1"><a class="header-anchor" href="#startapp"><span><code>StartApp</code></span></a></h3><p>启动 App 。</p><p>该动作属性需额外部分字段：</p><ul><li><code>package</code>: <em>string</em><br> 启动入口。必选。<br> 需要填入 package name 或 activity ，例如 <code>com.hypergryph.arknights</code> 或 <code>com.hypergryph.arknights/com.u8.sdk.U8UnityContext</code> 。</li></ul><h3 id="stopapp" tabindex="-1"><a class="header-anchor" href="#stopapp"><span><code>StopApp</code></span></a></h3><p>关闭 App 。</p><p>该动作属性需额外部分字段：</p><ul><li><code>package</code>: <em>string</em><br> 要关闭的程序。必选。<br> 需要填入 package name ，例如 <code>com.hypergryph.arknights</code> 。</li></ul><h3 id="stoptask" tabindex="-1"><a class="header-anchor" href="#stoptask"><span><code>StopTask</code></span></a></h3><p>停止当前任务链（MaaTaskerPostTask 传入的单个任务链）。</p><h3 id="command" tabindex="-1"><a class="header-anchor" href="#command"><span><code>Command</code></span></a></h3><p>执行命令。</p><p>该动作属性需额外部分字段：</p><ul><li><p><code>exec</code>: <em>string</em><br> 执行的程序路径。必选。</p></li><li><p><code>args</code>: <em>list&lt;string,&gt;</em><br> 执行的参数。可选。<br> 支持部分运行期参数替换：</p><ul><li><code>{ENTRY}</code>: 任务入口名。</li><li><code>{NODE}</code>: 当前节点名。</li><li><code>{IMAGE}</code>: 截图保存到文件的路径。该文件在进程退出前删除，若要持久保存请自行复制。</li><li><code>{BOX}</code>: 识别命中的目标，格式为 <code>[x, y, w, h]</code>。</li><li><code>{RESOURCE_DIR}</code>: 最后一次加载的资源文件夹路径。</li><li><code>{LIBRARY_DIR}</code>: MaaFW 库所在的文件夹路径。</li></ul></li><li><p><code>detach</code>: <em>bool</em><br> 分离子进程，即不等待子进程执行完成，直接继续执行后面的任务。可选，默认 false。</p></li></ul><p>举例：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">NodeA</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Command</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">exec</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Python</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">args</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> [</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">{RESOURCE_DIR}/my_script/test.py</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Haha</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">{IMAGE}</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">{NODE}</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">            &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">{BOX}</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">        ]</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">NodeB</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">action</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">Command</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">exec</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;"> &quot;</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;">{RESOURCE_DIR}/my_exec/my_exec.exe</span><span style="--shiki-light:#A31515;--shiki-dark:#ECEFF4;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    }</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>实际将会执行命令</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># NodeA</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">Python</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> C:/MaaXXX/resource/my_script/test.py</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> Haha</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> C:/temp/123.png</span><span style="--shiki-light:#A31515;--shiki-dark:#A3BE8C;"> NodeA</span><span style="--shiki-light:#000000;--shiki-dark:#D8DEE9FF;"> [0,0,0,0]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;"># NodeB</span></span>
<span class="line"><span style="--shiki-light:#795E26;--shiki-dark:#88C0D0;">C:/MaaXXX/resource/my_exec/my_exec.exe</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="custom-1" tabindex="-1"><a class="header-anchor" href="#custom-1"><span><code>Custom</code></span></a></h3><p>执行通过 <code>MaaResourceRegisterCustomAction</code> 接口传入的动作句柄。</p><p>该动作属性需额外部分字段：</p><ul><li><p><code>custom_action</code>: <em>string</em><br> 动作名，同注册接口传入的识别器名。同时会通过 <code>MaaCustomActionCallback</code>.<code>custom_action_name</code> 传出。必选。</p></li><li><p><code>custom_action_param</code>: <em>any</em><br> 动作参数，任意类型，会通过 <code>MaaCustomActionCallback</code>.<code>custom_action_param</code> 传出。可选，默认空 json，即 <code>{}</code> 。</p></li><li><p><code>target</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 同 <code>Click</code>.<code>target</code>，会通过 <code>MaaCustomActionCallback</code>.<code>box</code> 传出。可选，默认 true 。</p></li><li><p><code>target_offset</code>: <em>array&lt;int, 4&gt;</em><br> 同 <code>Click</code>.<code>target_offset</code> 。</p></li></ul><h2 id="等待画面静止" tabindex="-1"><a class="header-anchor" href="#等待画面静止"><span>等待画面静止</span></a></h2><p>等待画面静止。需连续一定时间 画面 <strong>没有较大变化</strong> 才会退出动作。</p><p>字段值为 uint 或 object，举例：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" style="--shiki-light:#000000;--shiki-dark:#d8dee9ff;--shiki-light-bg:#FFFFFF;--shiki-dark-bg:#2e3440ff;"><pre class="shiki shiki-themes light-plus nord vp-code"><code class="language-json"><span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">{</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">A</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">pre_wait_freezes</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#098658;--shiki-dark:#B48EAD;"> 500</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">,</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">    &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">B</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">        &quot;</span><span style="--shiki-light:#0451A5;--shiki-dark:#8FBCBB;">pre_wait_freezes</span><span style="--shiki-light:#0451A5;--shiki-dark:#ECEFF4;">&quot;</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">:</span><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;"> {</span></span>
<span class="line"><span style="--shiki-light:#008000;--shiki-dark:#616E88;">            // more properties ...</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">        },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">    },</span></span>
<span class="line"><span style="--shiki-light:#000000;--shiki-dark:#ECEFF4;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>若值为 object，可设置部分额外字段：</p><ul><li><p><code>time</code>: <em>uint</em><br> 连续 <code>time</code> 毫秒 画面 <strong>没有较大变化</strong> 才会退出动作。可选，默认 1 。</p></li><li><p><code>target</code>: <em>true</em> | <em>string</em> | <em>array&lt;int, 4&gt;</em><br> 等待的目标。可选，默认 true。值同上述 <code>Click</code>.<code>target</code> 。</p></li><li><p><code>target_offset</code>: <em>array&lt;int, 4&gt;</em><br> 在 <code>target</code> 的基础上额外移动再作为等待目标，四个值分别相加。可选，默认 [0, 0, 0, 0] 。</p></li><li><p><code>threshold</code>: <em>double</em><br> 判断“没有较大变化”的模板匹配阈值。可选，默认 0.95 。</p></li><li><p><code>method</code>: <em>int</em><br> 判断“没有较大变化”的模板匹配算法，即 cv::TemplateMatchModes。可选，默认 5 。<br> 同 <code>TemplateMatch</code>.<code>method</code> 。</p></li><li><p><code>rate_limit</code>: <em>uint</em><br> 识别速率限制，单位毫秒。可选，默认 1000 。<br> 每次识别最低消耗 <code>rate_limit</code> 毫秒，不足的时间将会 sleep 等待。</p></li><li><p><code>timeout</code>: <em>uint</em><br> 识别超时时间，毫秒。可选，默认 20 * 1000 。</p></li></ul><h2 id="节点通知" tabindex="-1"><a class="header-anchor" href="#节点通知"><span>节点通知</span></a></h2>`,87)),s("p",null,[i[18]||(i[18]=e("详见 ")),l(n,{to:"/zh-cn/application/2.2-%E5%9B%9E%E8%B0%83%E5%8D%8F%E8%AE%AE.html"},{default:t(()=>i[17]||(i[17]=[e("回调协议")])),_:1,__:[17]}),i[19]||(i[19]=e("（还没写x"))])])}const E=d(o,[["render",k]]),F=JSON.parse('{"path":"/zh-cn/application/3.1-PipelineProtocol.html","title":"任务流水线（Pipeline）协议","lang":"zh-CN","frontmatter":{"description":"任务流水线（Pipeline）协议 基础格式 任务流水线采用 JSON 格式描述，由若干节点（Node）构成，每个节点包含以下核心属性： 执行逻辑 流程控制机制 任务触发 通过 tasker.post_task 接口指定入口节点启动任务 顺序检测 对当前节点的 next 列表进行顺序检测 依次尝试识别每个子节点配置的 recognition 特征 中断...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"任务流水线（Pipeline）协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-19T09:11:31.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"MaaFramework\\"}]}"],["meta",{"property":"og:url","content":"https://maafw.xyz/MaaFramework-Docs-Website/zh-cn/application/3.1-PipelineProtocol.html"}],["meta",{"property":"og:site_name","content":"MaaFramework"}],["meta",{"property":"og:title","content":"任务流水线（Pipeline）协议"}],["meta",{"property":"og:description","content":"任务流水线（Pipeline）协议 基础格式 任务流水线采用 JSON 格式描述，由若干节点（Node）构成，每个节点包含以下核心属性： 执行逻辑 流程控制机制 任务触发 通过 tasker.post_task 接口指定入口节点启动任务 顺序检测 对当前节点的 next 列表进行顺序检测 依次尝试识别每个子节点配置的 recognition 特征 中断..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:locale:alternate","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-06-19T09:11:31.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-19T09:11:31.000Z"}],["link",{"rel":"alternate","hreflang":"en-us","href":"https://maafw.xyz/MaaFramework-Docs-Website/en-us/application/3.1-PipelineProtocol.html"}]]},"git":{"createdTime":1750324291000,"updatedTime":1750324291000,"contributors":[{"name":"weinibuliu","username":"weinibuliu","email":"weinibuliu@outlook.com","commits":1,"url":"https://github.com/weinibuliu"}]},"readingTime":{"minutes":18.09,"words":5428},"filePathRelative":"zh-cn/application/3.1-PipelineProtocol.md","autoDesc":true}');export{E as comp,F as data};
