import{_ as i,c as e,o as t,a2 as l}from"./chunks/framework.DYZYzxF5.js";const d=JSON.parse('{"title":"Integration","description":"","frontmatter":{},"headers":[],"relativePath":"en/maafw/2.1-Integration.md","filePath":"en/maafw/2.1-Integration.md"}'),r={name:"en/maafw/2.1-Integration.md"};function n(o,a,s,h,m,u){return t(),e("div",null,a[0]||(a[0]=[l('<h1 id="integration" tabindex="-1">Integration <a class="header-anchor" href="#integration" aria-label="Permalink to &quot;Integration&quot;">​</a></h1><h2 id="c" tabindex="-1">C++ <a class="header-anchor" href="#c" aria-label="Permalink to &quot;C++&quot;">​</a></h2><ul><li>Interface Status: <ul><li>Full functionality available ✔️</li><li>Sample provided ✔️</li><li>Unit Testing via CI ✔️</li><li>Standardized interface ❌</li><li>Protocol parsing encapsulation ❌</li></ul></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/include">Source</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework/releases">Download</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework/blob/main/sample/cpp">Sample</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/test">Unit Testing</a></li></ul><h2 id="python" tabindex="-1">Python <a class="header-anchor" href="#python" aria-label="Permalink to &quot;Python&quot;">​</a></h2><ul><li>Interface Status: <ul><li>Full functionality available ✔️</li><li>Sample provided ✔️</li><li>Unit Testing via CI ✔️</li><li>Standardized interface ✔️</li><li>Protocol parsing encapsulation ✔️</li></ul></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/source/binding/Python">Source</a></li><li><a href="https://pypi.org/project/MaaFw/">Download</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/sample/python">Sample</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/test/python">Unit Testing</a></li></ul><h2 id="golang" tabindex="-1">Golang <a class="header-anchor" href="#golang" aria-label="Permalink to &quot;Golang&quot;">​</a></h2><ul><li>Interface Status: <ul><li>Full functionality available ✔️</li><li>Sample provided ✔️</li><li>Unit Testing via CI ✔️</li><li>Standardized interface ✔️</li><li>Protocol parsing encapsulation ❌</li></ul></li><li><a href="https://github.com/MaaXYZ/maa-framework-go">Repository</a></li><li><a href="https://github.com/MaaXYZ/maa-framework-go/tree/main/examples">Sample</a></li><li><a href="https://github.com/MaaXYZ/maa-framework-go/tree/main/test">Unit Testing</a></li></ul><h2 id="nodejs" tabindex="-1">NodeJS <a class="header-anchor" href="#nodejs" aria-label="Permalink to &quot;NodeJS&quot;">​</a></h2><ul><li>Interface Status: <ul><li>Full functionality available ✔️</li><li>Sample provided ✔️</li><li>Unit Testing via CI ✔️</li><li>Standardized interface ✔️</li><li>Protocol parsing encapsulation ✔️</li></ul></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/source/binding/NodeJS">Source</a></li><li><a href="./NodeJS/J1.1-QuickStarted">Document</a></li><li><a href="https://npmjs.com/@maaxyz/maa-node">Download</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/sample/nodejs">Sample</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework/tree/main/test/nodejs">Unit Testing</a></li></ul><h2 id="java" tabindex="-1">Java <a class="header-anchor" href="#java" aria-label="Permalink to &quot;Java&quot;">​</a></h2><ul><li>Interface Status: <ul><li>Full functionality available ✔️</li><li>Sample provided ✔️</li><li>Unit Testing via CI ✔️</li><li>Standardized interface ✔️</li><li>Protocol parsing encapsulation ❌</li></ul></li><li><a href="https://github.com/hanhuoer/maa-framework-java">Repository</a></li><li><a href="https://central.sonatype.com/namespace/io.github.hanhuoer">Download</a></li><li><a href="https://github.com/hanhuoer/maa-framework-java/blob/main/maa-sample/README.md">Sample</a></li><li><a href="https://github.com/hanhuoer/maa-framework-java/blob/main/maa-core/src/test">Unit Testing</a></li></ul><h2 id="csharp" tabindex="-1">CSharp <a class="header-anchor" href="#csharp" aria-label="Permalink to &quot;CSharp&quot;">​</a></h2><ul><li>Interface Status： <ul><li>Full functionality available ✔️</li><li>Sample provided ✔️</li><li>Unit Testing via CI ✔️</li><li>Standardized interface ✔️ <ul><li>Callback Packaging: NotificationCallback is wrapped as a event named Callback, others are wrapped as interfaces.</li></ul></li><li>Protocol parsing encapsulation ❌ <ul><li>Partially supported via the Binding.Extensions library</li></ul></li></ul></li><li><a href="https://github.com/MaaXYZ/MaaFramework.Binding.CSharp">Repository</a></li><li><a href="https://www.nuget.org/packages/Maa.Framework">Download</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework.Binding.CSharp/tree/main/sample">Sample</a></li><li><a href="https://github.com/MaaXYZ/MaaFramework.Binding.CSharp/tree/main/src/MaaFramework.Binding.UnitTests">Unit Testing</a></li></ul><h2 id="and-more" tabindex="-1">And More <a class="header-anchor" href="#and-more" aria-label="Permalink to &quot;And More&quot;">​</a></h2><p>Language support is inseparable from the contributions of collaborators! If you also want to add an interface of a certain language to MaaFramework, please refer to <a href="4.2-StandardizedInterfaceDesign">Standardized Interface Design</a> and submit a PR to us!</p>',15)]))}const p=i(r,[["render",n]]);export{d as __pageData,p as default};
